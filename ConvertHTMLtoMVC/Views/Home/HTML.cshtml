
@{
    ViewBag.Title = "HTML";
}

<aside id="htmlRightColumn">
    <h2>Topics</h2>
    <ul class="asidelist">
        <li>
            <a href="#basics">HTML Basics</a>
        </li>
        <li>
            <a href="#lists">Lists</a>
        </li>
        <li>
            <a href="#semantics">Semantic vs Non-Semantic Tags</a>
        </li>
        <li>
            <a href="#links">Links</a>
        </li>
    </ul>

    <h2>External Resources</h2>
    <ul class="asideList">
        <li>
            <a href="https://www.w3schools.com/html/default.asp">W3Schools HTML</a>
        </li>
        <li>
            <a href="https://validator.w3.org/">HTML Validator</a>
        </li>
        <li>
            <a href="http://www.sololearn.com/Course/HTML/">SoloLearn HTML</a>
        </li>
        <li>
            <a href="http://www.tutorialspoint.com/html/">TutorialsPoint HTML</a>
        </li>
        <li>
            <a href="http://htmldog.com/guides/html/"> HTML Dog (HTML)</a>
        </li>
        <li>
            <a href="https://panipsum.com/">Lorem Ipsum</a>
        </li>
        <li>
            <a href="https://youtu.be/y3UH2gAhwPI"> Ultimate Guide to Learning HTML and CSS</a>
        </li>
        <li>
            <a href="https://youtu.be/tGWdjWhyWPM"> Basic HTML and CSS Website</a>
        </li>
    </ul>
</aside>
<section class="mainWrapper" id="htmlLeftColumn">
    <h1 id="basics">HTML Basics</h1>
    <p>
        HTML enables us to mark up the content to provide it more meaning behind the scenes. This can be used by search engines, screen readers, outlining tools, and readers of our code in general. We can mark a word as an abbreviation, create lists, display code and output, create tables, mark content as quotes, and provide citations. Browsers may or may not implement standard formatting (such as a dotted underline) or standard behavior (such as a tooltip when you hover over that markup) -- but regardless, we can add our own CSS or JavaScript to ensure such things. The point of HTML isn't to get a visual effect. It's to describe and structure your content.
    </p>
    <article>
        <!--
            Tag vs Elements vs Attributes
                -The tag refers to the actual tag used to indentify the start and end of an element
                -The term element refers to the tags, the attributes and the associated values, and any content between the tags
                -The term attribute refers to the characteristics that are applied to an element's opening tag and come in name/value pairs

            Block Level vs Inline Tags
                -Block Level Tags
                    -These types of tags are designed to break up the flow on content
                    -Take up 100% of their parenting container
                    -Designed to contain content and other block or inline tags
                -Inline Tags
                    -Do NOT break up the flow of content
                    -Only take up as much space as needed for their content
                    -Should NOT contain block level elements
                    -CAN contain other line tags
        -->
        <h2>Block Level vs Inline Tags</h2>
        <p>
            Block-level tags are designed to break up the flow of content on the page with line breaks, normally extend the entire width of their container, and are designed to contain other tags (block and inline). Inline tags do not normally break the flow of content, can contain other inline tags, and are designed to be contained inside block tags, but not to contain block elements themselves.
        </p>

        <section>
            <h3>Common Block Level Tag</h3>
            <!--alt+shift+w-->
            <ul>
                <li>
                    Headings - range from level 1 (primary) down to 6 (lowest level). Tags: h1 - h6
                </li>
                <li>
                    Header – a container at the top to introduce a page or section (can be used more than once per page)
                </li>
                <li>
                    Main – a container for primary page content – to be used up to once per page.
                </li>
                <li>Footer – a container at the bottom of a page or section, usually providing closing information like copyright and/or contact information or duplicate or lesser navigation (can be used more than once per page).</li>

                <li>Nav – a container intended for links, usually limited to main navigation links within the site or page.</li>

                <li>Article – a stand-alone content area that could even be on its own page. Typical uses would be articles, blog posts, and important self-contained topics.</li>

                <li>Section – subsections that group content together and should contain a heading. Not used simply for styling.</li>

                <li> Aside – content that is indirectly associated with the primary content (like pull-quotes, secondary nav blocks, advertisements, etc.)</li>

                <li>Div – the most generic of block-level containers. Previously the go-to standard, now the last resort container.</li>

                <li>Paragraph - A standard low-level block element for text and images, but one of the few not designed to contain any other block elements.</li>

                <li>List - Content is broken out (usually with bullet points or numbers) and designed for readability. Tags: ul, ol, dl</li>

                <li>Table: Designed for spreadsheet-style, tabular data, with information stored in individual cells laid out in columns and rows. Once used for page layout purposes, the adoption of CSS encourages tables to only be used grids of information for quick scanning, analysis, and comparison.</li>

                <li>Form: Designed to collect input from the user, typically to be sent to the webserver for server-side processing and response.</li>
            </ul>
        </section>

        <section>
            <h3>Common Inline Tags</h3>
            <ul>
                <li>img -  an image to be displayed on the page.</li>

                <li>a - Anchor tags typically used to create hyperlinks pointing to other locations.</li>

                <li>span -  a generic inline element - only exists to target and manipulate it with CSS or JavaScript.</li>

                <li>
                    strong - Strong Importance
                </li>
                <li>em - Emphasized</li>

                <li>button - an interface element users click on to trigger some programmed functionality.</li>

                <li>Input - used to generate one of several types of user input controls, like text boxes, radio buttons or checkboxes</li>

                <li>code - example code</li>

                <li>samp - Sample output from a computer program</li>

                <li>abbr - abbreviation or acronym (although there is an acronym tag, it's fallen out of favor and been merged with abbr)</li>
            </ul>
        </section>

    </article>

    <article>
        <h2 id="lists">Lists</h2>
        <h3>Ordered Lists(Numbered)</h3>
        <p>
            Use OL container and the LI internal tags.
        </p>
        <h3>Work From Home Morning Commute</h3>
        <ol>
            <li>Get out of bed</li>
            <li>Drink Coffee</li>
            <li>Get Ready for Work</li>
            <li>Begin Work</li>
        </ol>
        <h2>Unordered Lists (bullets)</h2>
        <p>Use UL container and LI internal Tags</p>
        <h3>To Do List</h3>
        <ul>
            <li>Call Plumber</li>
            <li>Apply for Jobs</li>
            <li>Work Towards World Peace</li>
            <li>Idk...eat and sleep I guess</li>
        </ul>

        <!--Find out more about definition lists-->
        <h2>Definition lists (two-tiered lists)</h2>
        <p>
            Use DL container, plus DT (Definition term) and DD (Definition Defined) internal tags
        </p>
        <h3>Conference Schedule</h3>
        <dl>
            <!--standard definition list = one term and one pair-->
            <dt>8am</dt>
            <dd>Participants registration</dd>

            <dt>9am</dt>
            <dd>Opening Remarks</dd>

            <!--one term/many definitions-->
            <dt>11:30am</dt>
            <dd>"Spontaneous Combustion in the Modern Age" - Rm 211</dd>
            <dd>"It's Never Too Late to Procrastinate" - Rm TBD</dd>

            <!--many terms/one definition-->

            <dt>11:30</dt>
            <dt>2:15</dt>
            <dd>BreakOut Sessions</dd>
        </dl>

        <h2>Nested Lists (sub-bullets)</h2>
        <p>
            Most Commonly used with OL and UL, where the new list is embedded right before an LI tag closes, achieving sub-bullets for that bullet.
        </p>
        <h3>Creating a Database</h3>
        <ol>
            <li>
                Plan Database
                <ul>
                    <li>Draw: on whiteboard</li>
                    <li>Talk: interview key stakeholders</li>
                    <li>Evaluate: Are there any shortcomings?</li>
                </ul>
            </li>
            <li>
                Create Tables
                <ol>
                    <li>Create fields with names and DataTypes</li>
                    <li>Assign Primary Keys</li>
                </ol>
            </li>
            <li>Create Stable Relationships</li>
            <li>Add Data</li>
            <li>Test</li>
            <li>Back up</li>
        </ol>

    </article>

    <article>
        <h1 id="semantics">Semantic vs Non-Semantic Tags</h1>
        <p>

        </p>
        <section>
            <h2>Examples:</h2>
            <p>
                <b>This line should be marked as "b" for bold (non-semantic)</b>
                <br />
                <strong>This line should be marked as "strong" for strongly expressed, or important text(semantic)</strong>
                <br />
                <i>This line is marked as "i" for italic (non-semantic)</i>
                <br />
                <em>This line should be marked "em" for emphasized text (semantic)</em>
            </p>
        </section>
    </article>

    <article>
        <h1 id="links"> Links</h1>
        <h2>Relative vs Absolute Links</h2>
        <p>
            These are the two most common types of links.
        </p>

        <p>
            Relative Links are for files wihin the site. A relative link can be defined based on the path from the current page or from the root folder. The latter is called a root relative link. <br />
            Here is a relative example: <a href="index.html">Relative Link to Home Page (Will Leave Current Site)</a>
            <br /><!--<br/>-->
            Here is a root relative example: <a href="/index.html">Root Relative Link to the Home Page (Will Leave Current Site)</a>
        </p>

        <p>
            Absolute Link are for locations outside of your site:
            <a href="http://centriq.com">Centriq</a>
            <!--"www" is NOT required for Absolute links-->
        </p>

        <h2>Specialized Links and Features</h2>
        <p>
            You can cause a link to open in a new browser or a new tab using target="_blank".
            <a href="http://centriq.com" target="_blank">This will open a New Tab/Browser instead of leaving the current one</a>
        </p>

        <p>
            You can create a link that opens a new emails to a specific email address.
            Email Links are problematic for users that do not have an email client configured.
            Email Me at <a href="mailto:postmaster@centriqdev.com">
                postmaster@centriqdev.com
            </a>
        </p>

        <p>
            Telephone links (for when you are browsing from your mobile phone) are relatively new and the syntax is being implemented inconsistently. Link to call Mom:
            <a href="tel:+01-618-972-9305">618-972-9305</a>
        </p>
        <p>
            Download links are links to non-HTML files. When clicked, the default action of browsers is to start downloading the file unless they have the built in ability to read the file (like PDFs).
            Examples of these types of links are on <a href="resources/index.html">Resources Page</a>
        </p>

        <p>
            Named Anchor or Bookmark Links refer to a certain id on the HTML page.
            The ids are case sensitive and must be prefaced with a #, just like in CSS. See the aside element for examples.
        </p>

    </article>
</section>
