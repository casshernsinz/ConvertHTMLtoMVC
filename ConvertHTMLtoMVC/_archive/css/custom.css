
/*
    This is an External Stylesheet.
    Designed for maximum reuse throughout the site, linked in the <head> of the HTML pages.
*/
/*@import url('import.css'); <-- This is import syntax*/

/*Here's the line that imports from Google fonts to be used later in this style sheet.*/
@import url('https://fonts.googleapis.com/css2?family=Architects+Daughter&family=Courier+Prime&display=swap');

body {
}

header {
    /*text-align: center;*/
    background-color: lightblue;
}

main {
    /*text-align: center;*/
    background-color: white;
}
nav ul li{
    padding: 1em 4em;
}
h1{
    text-align: center;
    color: darkblue;
    font-size: 24px;
}

h2 {
    text-align: center;
    text-decoration: underline;
    font-weight: bold;
    font-size: 20px;
}

aside h2 {
    text-align: center;
    background-color: white;
    color: gold;
    text-decoration: none;
}
header h1 {
    text-align: center;
    color: darkblue;
}
footer {
    text-align: center;
    font-style: italic;
}

/*#region Links*/
ul.blocklist{
    background-color: teal;
    padding: 0.8em;
}
    ul.blocklist{
        list-style-type: none;
        list-style-image: none;
    }

        ul.blocklist a {
            color: lightsalmon;
            text-align: center;
            padding: .5em;
            display: block; /*make the entire horizontal area clickable, not just the text*/

        }

        ul.blocklist a:hover{
            background-color: darkblue;
            color: lightblue;
        }
    

a {
    color: teal;
    font-weight: bold;
    text-decoration: none; /*Removes the default style of underlining*/
}


/*CSS Pseudo Class*/
/*
    hover= mouse over element
    active = actively clicking on the element
    focus = having clicked on the element and it is being currently selected
*/
    a:hover, a:active, a:focus {
        color:lightblue;
        text-decoration: underline;
        background-color: teal;
    }
    /*topics list - HTML.html*/
    .asidelist{
        list-style: none;
    }

    /*navbar link styling*/

    nav a{
        font-weight:bold;
        color: lightsalmon;
    }
    nav a:hover, nav a:active, nav a:focus{
        text-decoration:none;
    }

    nav ul{
        background-color: teal;
        padding: 0;
        border-top: 2px dotted darkgray;
        border-bottom: 2px dotted darkgray;
    }
    nav li:hover{
        background-color: darkblue;
    }

    /*nav link structure- make nav links horizontal*/

    nav ul li{
        display: inline-block; /*display list items horizontally instead of vertically*/
    }
/*#endregion*/

/*#region Colors*/
/*
    Color Notes:
    So far we have been using named colors. These are limited. There are only 140 option supported by most modern web browsers.

    There are also coding systems and with these we get more specialized options.
        -Most of them make use of numeric values to represent values of red, green, and blue (RGB for short).
        -Using RGB there are 16million different color options.

    Hexadecimal Notation
    #RRGGBB
    Original color coding system, but not easily legible.
    0 is the first digit (you start at 0)
    Second digit 0-9 and a(10)-F(15)
    16 causes the first digit increment and the second digit is added starting at 0 (15 = 0F) (16 = 10)
    Pattern goes up to 255(FF)

    Hex Shorthand
    #RBG
    Shortens teh numeric representation of a color to 3 digits
    This limits color options 4096
    Can Only be used when there are repeating digits in each color value
    ex. #229988

    Percentage Ranges
    rbg (R%, G%, B%) 1-100%

    Numeric Ranges
    rbg (r, g, b) uses standard decimal number for each color 0-255

    RBGA
    rgba(r, g, b, a)
    Alpha adds transparency and should be between 0(none) and 1(full)
*/

.colors{
    border: dashed 2px teal;
}

    .colors article p {
        padding: 20px 5px;
        font-size: 20px;
    }
        .colors article p span{
            font-weight: bold;
            font-style: italic;
        }
#colordemo1{
    background-color: #6B00E8;
    color: #FA1587;
}
#colordemo2{
    background-color: #ddd;
    color: #000;
}
#colordemo3{
    background-color: rgb(205, 146, 60);
    /*
        Above is using numeric ranges but could also use percentages
        Example: rbg(90%, 57%, 20%)
    */
}
#colordemo4{
    background-color: rgba(16, 28, 40 , .2);
    color: rgba(248,6,82,.7);
}
#colordemo5{
    background-color: teal;
    color: lemonchiffon;
}

.colors article h1 {
    text-shadow: 3px -2px 1px #f27d0c;
    /*
        From left to right: horizontal, vertical, blurlength, color

        if the first two numbers are postive, the shadow goes down and to the right.
        if the first two numbers are negative, the shadow goes up and to the left.
    */
}
.colors{
    box-shadow: -15px -10px 20px lightsalmon;
}

    .colors + aside{
        /*Adjacent sibling selector: target all aside elements that immediately flow and element with .colors*/
        box-shadow: inset 0 0 50px #333;
        /*
            inset = interior shadow
            0 0 - all directions
        */
    }

main {
    background-color: rgba(211, 211, 211, 0.6) !important;
    /*!important = trumps precedence, make sure this is what is rendered*/
}
/*#endregion*/

/*#region Fonts*/
/*

    Font Notes

    Fonts are declared in font-family. Read from left to right. It is a list of fonts starting the specific desired font followed by a list of back ups until you get to a generic font type at the end.

    Web Safe Fonts- widely available across more devices. This is always changing.

    Alternatively, you can import fonts through a CDN(Content Delivery Network). This ensures the same font is used to render your site for all devices.

    Font sizes are declared in pixels (px) which are fixed width values.

    Em's
        Font-Size is figured based on the font-size of the parent element
        Ex: if the parent has a font-size of 12px and the child font-size of 1.5em, the child would have an 18px font.
        Best practice is to declare font-size in pc at the body level and use em's for all other values.
*/

#fontdemo1 {
    font-family: "Caslisto MT", Cambria, "Times New Roman", serif;
}
#fontdemo2{
    font-family: Verdana, Verdana, Geneva, Tahoma, sans-serif, sans-sarif;
}
#fontdemo3 {
    font-family: "Brush Script MT", cursive;
}

#fontdemo4 {
    font-family: "Courier New", "Lucida Console", monaco, monospace;
}

#fontdemo5 {
    font-family: Papyrus, fantasy;
}

/*Common Font mods*/

.bold {
    font-weight: bold;
}

.italic {
    font-style: italic;
}

.small-caps {
    font-variant: small-caps;
}

.letter-spacing {
    letter-spacing: .3em;
}

.word-spacing {
    word-spacing: 1em;
}

.fs-px10 {
    font-size: 10px;
}

.fs-px20 {
    font-size: 20px;
}

.fs-px40 {
    font-size: 40px;
}

.fs-em0-7 {
    font-size: .7em;
}

.fs-em1-8 {
    font-size: 1.8em;
}

.fs-em4 {
    font-size: 4em;
}

.lh-1-5-spacing {
    line-height: 1.5;
}

/*the next 3 line-height classes result in double-spacing, using
different measurement types*/
.lh-double-spacing {
    line-height: 2;
    /*could also use em or %*/
}

.lh-px-40 {
    line-height: 40px;
}

.align-left {
    text-align: left;
}

.align-right {
    text-align: right;
}

.align-justify {
    text-align: justify;
}

.align-center {
    text-align: center;
}
/*end of common font mods*/
/*

    Font Shorthand Syntax
    font: font-style, font-variant, font-weight, font-size/line-height, font-famliy
    Only ones that are required are font-size and font-family. All others can be inherited.
*/
#fontdemo6{
    font: 1.1em Veranda, Geneva, sans-serif;
    /*just uses the 2 "required" font for shorthand properties.*/
}
#fontdemo7{
    font: italic small-caps bold 19px/2em "palatino linotype", "book antiqua", "palatino", "serif";
}

/*
    
    font-family: 'Architects Daughter', cursive;
    font-family: 'Courier Prime', monospace;

    Imported Fonts:
        These allow us to specify a wide variety of appealing fonts
        Requires a combination of imported and css
        Potentional Downside: increased download time.
*/
h1, h2, footer {
    text-align: center;
}
header h1 {
    font-family: 'Architects Daughter', cursive;
    font-size: 2.2em;
}

header h2 {
    font-style: italic;
    font-family: 'Courier Prime', monospace;
    font-size: 15px;
}
main h1 {
    font-family: 'Courier Prime', monospace;
    font-size: 1.75em;
}

/*#endregion*/

/*#region Images*/
/*
    Image Syntax
    <img src="path/file.ext" alt="descriptive text" title="short description"/>

    Alt: is used for screenreaders and image search results.
        -It is also what is displayed what is on screen if the image fails to load.

    Title: the text that pops up when you hover over an image.

    jpg/jpeg
        -highly compressed file ideal for high contrast color photos
        -Lossy compression: making changes and saving over the same file will result in degrading the image quality.
        -Animation is not supported
        -Transparency is not supported.
    gif
        -ideal for line art, illustrations, or even images with few complex colors.
        -Lossless Compression: No quality deterioration
        -Does support animation
        -Does support Transparency
    png
        -Good for Logos
        -Lossless Compression: no quality deterioration
        -Does not support animation
        -Does support transparency

    CSS Image Properties
    background-color: value
        - THis is a best practice even if your image is going to fill the background. In case there is any problem or delay with loading your image. You will have chosen that's similar enough to provide contrast from the text sitting on top of the background. 

    background-url: allows you to pass a url of an image to set as the bg
    background-repeat: If the image is not big enough. You can have it repeat in some way. 

    background-attachment: if the bg image is fixed or scrollable

    background-position: Left | right | top | bottom (default) positions the bg on the viewport
    -can use x-horizontal and/or the y-vertical values together (anything unspecified defaults to center)
    -Can specify the x and y position from the top left corner using px, em, %. 

    background-size:
    -Cover: scale to completely fill width and height.
    -may result in truncation
    -Contain: scale to the largest size needed so it fills the height and width without truncation

    Shorthand:
    background: color url(path/file) position/size repeat attachment

*/
ul li{
    list-style-image: url(../images/bullet_point_image_teal.png);
}
aside ul li{
    list-style-image: url(../images/bullet_point_image_orange.png);
}
/*Background Images*/
header{
    background-image: url(../images/a-r-t-paola-589990-unsplash.jpg);
    background-repeat: no-repeat;
    background-size: cover;
}
#headerOverLay {
    background-image: url(../images/computer_icon.png);
    background-repeat: no-repeat;
    background-size: 90px;
    background-position: 3%center;
    padding: 2em;
}

header h1, header p{
    margin: 7px 0 7px 150px
}
header h1{
    text-align: left;
    letter-spacing: 0.1em;
    color: #96F3FA;
}
header{
    border-radius:5px;
}

/*background image for the entire page using shorthand syntax*/
body{
    background: url(../images/ben-krygsman-745458-unsplash.jpg);
    background-size:cover;
    margin: 0;
}
nav ul{
    min-height: 52px;
    background-image: url(../images/border_wave.png);
    background-repeat: repeat-x;
    background-position: bottom;
    background-size: 200px;
}
/*#endregion*/

/*#region CSS Box Model*/
/*
        CSS Box Model 
    
    For elements that are block level or are styled to have a display of inline-block

    Box Model Properties
    -Width/Height
        -By default, width only applies to the content inside the box. Padding and borders add to the actual width of the box
        -Only limits the horizontal space for a specific element. IT does not cause later elements to flow up to fill the empty space
    -Padding
        -Defines the buffer space between the content in the box and the border of the box 
    -Border
        -Lies between padding and margin
        -CSS peroperies for border includes style, size, and color
    -Margin
        -Defines the buffer space between the element and adjacent elements
        -When margins of two objects but up against one another, the values of the two margins are not added togehter. 
        The larger margin is the one that is use
        -text-align: center vs margin: auto
            -text-align: center only centers content inside of an element
            -margin: auto sets the margins to equal the top/bottom and left/right within the elements parent container
        padding/margin shortcuts

    Set all sides to an equal value
    padding: 20%

    Specifiy each side manually
    border-top: 1em; border-left: 2em; border-right: 1.75em; border-bottom:2.25em;

    Shorthand TRBL(Clockwise)
    margin 1px 2px 3px 4px

    Shorthand for TB LR(Horizontal and vertical together)
    padding: 20% 10%
    margin: 0 auto;

    Shorthand T RL B(top/bottom sepeare and l/r together
    margin: 10px 5px 15px

    Display: Inline-block
    - Act like an inline element and only take up enough space for the content they contain
    - Still have box model properties available 

    Syntax Options for Padding/Margin (no commas)
    1 value: all sides
    2 values: TB LR
    3 values: T LR B
    4 values: T R B L (clock-wise)

    Possible values
    px (fixed width)
    em (multiplier based on font-size in current context)
    % (based on width of parent container - typically used for horizontal positioning)
*/
/*Create a Gallery layout for images.html*/
div.galleryItem{
    margin: 5px;
    border: 1px solid #ccc;
    display: inline-block;
    width: 350px;
}
    div.galleryItem:hover{
        border: 1px solid lightsalmon;
    }
    div.galleryItem img{
        width: 100%;
        height:auto;
    }
    div.galleryItem a:hover{
        background-color: lightsalmon;
    }
#imageGallery{
    margin: 0 auto;
    width: 85%;
    text-align:center;
}
.mainWrapper{
    padding: 1%;
}
.asideWrapper {
    padding: 1%;

}
footer {
    padding: 3%;
}
/*Provide padding for main content in the <aside> of HTML pages*/
nav ul {
    margin: 0;
}
aside h2 {
    padding: 2%;
}
/*#endregion*/

/*#region Float & Clear*/
/*
    Float & Clear Notes:

    Floating an element in HTML is when you move an element to the left or right inside of its parenting container.
    Floating an can cause the parenting container to collapse because the element is no longer contributing to it's height.

    You can use clears to force parenting containers to maintain their height and to ensure that content DOES NOT flow up beside the floated element.

    Clears only clear the container they're placed in.
*/
/*Floating an Image*/
#html, #js{
    float: right;
    height: 75px;
    margin-left: 20px;
}
#css{
    float: left;
    height: 75px;
    margin-right: 20px;
}
#frontendDev {
    width: 85%;
    margin: 0 auto;
}
/*:nth child selector - used to efficiently target only certain child elements*/
    #frontendDev section:nth-child(odd) h3, #frontendDev section:nth-child(even) h3{
        margin: 10px 75px;
    }
    #frontendDev section:nth-child(even) p, #frontendDev section:nth-child(odd) p{
        margin: 0 75px;
    }

/*2 Column Layout with 1 column floated*/
#leftColumn {
    width: 73%;
    border-right: 1px dashed teal;
}
#rightColumn {
    width: 25%;
    float: right;
}
/*remove spacing above the h2 inside of the aside*/
aside h2{
    margin-top: 0;
}
#htmlLeftColumn{
    margin-right: 25%;
    border-right: 1px dashed teal;
}
#htmlRightColumn{
    width: 25%;
    float: right;
}
/*2 column layout with 2 columns floated*/
#cssLeftColumn{
    width: 75%;
    float: left;
    border-right: 1px dashed teal;
    box-sizing: border-box;/*Changes the way width and height are figured. This means the width of 75% includes the content, padding, and border*/
}
#cssRightColumn{
    width: 25%;
    float: right;
}
.clear{
    clear:both;
}
/*
    MINI-LAB
    Create a two column layout, with both columns floated, on images.html, fonts.html, and colors.html
    The aside will be the right column and it should be 25% of the width
    The <section class="mainWrapper"> will be the left column and it should have a width of 75%
*/

/*Using floats to create a grid layout*/
div#webResources article{
    float: left;
    width: 33.33%;
}
.clear{
    clear:both
}
/*#endregion*/

/*#region HTML Tables*/
/*
    Notes on Tables

    Purpose: Show records broken down by various fields of information.
    This helps with scimming, comparisons, and data analysis.
        -Especially useful when combined with additional client side or server side functionality. (paging, searching, sorting, and filtering)
    When not to use:
        -Avoid using tables just to layout content on a page. That's a job for css.
        -Beware of tables with more than a few columns as this will often display poorly on smaller screens unless responsive design is used.

    Fundamental tags for a table:
        -<Table> is used for the outer container   
        -<tr> used for rows within the table
        -<td> used for cells of data within the rows
        -<th> is a specialized header cell, used to explain data it goes with.
            -Usually used at the top of a column, but can also be used as a row header.
        -<thead>, <tbody>, <tfoot> are sections used to wrap around one or more rows in a table.   
            -Commonly used to seperate captions and extraneous info about the table(<thead>, <tfoot>) from actual rows of table data (<tbody>)
            -Provide additional hooks for CSS formatting and JS functionality.

*/

table,tr,td,th{
    border: 1px solid black;
    border-collapse: collapse; /*avoids duplicate adjacent borders inside the table.*/
}

table {
    margin: auto; /*note. text-align: center would adjust the content in the cells*/
    margin-bottom: 2em;
}
th{
    font-weight: bold;
    text-align:center;
}
td, th{
    padding: .3em;
}
thead{
    background-color: #96F3FA;

}
tfoot{
    background-color: teal;
}
    tfoot tr, tfoot td{
        border: 0;
    }
tbody tr:nth-child(even){
    background-color: lightsalmon;/*this will apply an alternating background to each row.*/
}
/*#endregion*/